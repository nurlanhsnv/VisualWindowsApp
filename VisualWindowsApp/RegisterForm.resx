<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>